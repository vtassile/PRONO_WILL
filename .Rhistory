# Setup the indicator bullets
indicators <- ol(class = "carousel-indicators")
indicators$children <- lapply(seq_along(dots), function(i) {
if (i == 1)
li(`data-target` = paste0("#", id), `data-slide-to` = "0", class = "active")
else
li(`data-target` = paste0("#", id), `data-slide-to` = as.character(i - 1))
})
# Construct the actual carousel object
caro <- div(id = id, class = "carousel slide", `data-ride` = "carousel",
`data-interval` = as.character(interval),
style = sprintf("height:%s; width:%s;",
height,
width))
caro$children <- list(caro_inner, indicators)
return(tagList(caro, carousel_events(id)))
}
save.image("~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(DT)
library(shinyjs)
library(plotly)
library(markdown)
library(rmarkdown)
library(shiny)
library(DT)
library(nlme)
library(stats)
library(Matrix)
library(splines)
library(car)
library(lme4)
library(nloptr)
library(MASS)
library(lattice)
library(ggplot2)
library(optimx)
library(datasets)
library(Hmisc)
library(plyr)
library(dplyr)
library(manipulate)
library(shinyjs)
library(plotly)
library(knitr)
library(markdown)
runApp()
runApp()
runApp()
runApp()
knit_with_parameters('~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/INTRO.Rmd', encoding = 'UTF-8')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
save.image("~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/.RData")
save.image("~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/PRONO_PAGINA.RData")
shiny::runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
TEMPO_3<-MAESTRO_C
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
TEMPO3<-MAESTRO_C
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot()+
geom_point(size=0.5,alpha=0.01)+
coord_flip()
ggplot(ff2,
aes(x=.fitted,y=.resid))+geom_point()
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point()+
geom_smooth(colour="red",alpha=0.3)
ggplot(ff2,
aes(x=.fitted,y=.resid))+geom_point(alpha = 0.1)
ggplot(ff2,
aes(x=.fitted,y=.resid))+geom_point(alpha = 0.1)
ggplot(ff2,
aes(x=.fitted,y=.resid))+geom_point(alpha = 0.07)
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot()+
geom_point(alpha = 0.07)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot()+
geom_point(alpha = 0.01)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot()+
geom_point(aes(colour = "red"),alpha = 0.01)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot()+
geom_point(aes(colour = "red"),alpha = 0.05)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot(alpha = 0.05)+
geom_point(aes(colour = "red"),alpha = 0.05)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot(alpha = 0.05)+
coord_flip()
MODELO_F<-AB_MOD24
ff1 <- fortify(MODELO_F)
ff2 <- transform(ff1,SITIO2=reorder(ANO,X=.resid,FUN=mean,sort=sort))
ggplot(ff2,aes(x=SITIO2,y=.resid))+geom_boxplot(alpha = 0.05)+
geom_point(aes(colour = "red"),alpha = 0.01)+
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
REGISTRO <- reactiveValues(data = NULL)
inputPanel(
selectInput("n_modelo", label = "MODELO CANDIDATO:",
choices = c(17,21,24,25,26,27,30,32), selected = 17)
)
renderUI({
if(input$n_modelo==17) {
RETORNA<-withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_1 {_{TIPO_r}} , \\beta_2 , \\beta_3 {_{ TIPO_r}}$$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{TRANS,3,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO:$$ b_{2,FRUTO_{m(j)}} , b_{LONGI,1,FRUTO_{m(j)}} , b_{LONGI,3,FRUTO_{m(j)}} , b_{TRANS,3,FRUTO_{m(j)}}$$"
))
}
if (input$n_modelo == 21) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$\\beta_{1_{TIPO_r}}, \\beta_2 , \\beta_{3_{ TIPO_r}}$$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{2,SITIO_j} $$
Eectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}} , b_{LONGI,1,FRUTO_{m(j)}} , b_{LONGI,3,FRUTO_{m(j)}} , b_{TRANS,3,FRUTO_{m(j)}}$$
"))
}
if (input$n_modelo == 24) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}} , \\beta_2, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$\\beta_3 (a_{3_{TEMP }})$$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{LONGI,3,SITIO_j}, b_{TRANS,3,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}} $$
"))
}
if (input$n_modelo == 25) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}}, \\beta_2, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$ \\beta_3 (a_{3_{TEMP }}) $$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{2,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}} $$
"))
}
if (input$n_modelo == 26) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}}, \\beta_2, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$ \\beta_3 (a_{3_{TEMP }}) $$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{LONGI,3,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}} $$
"))
}
if (input$n_modelo == 27) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}}, \\beta_, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$ \\beta_3 (a_{3_{TEMP }}) $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}}  $$
"))
}
if (input$n_modelo == 30) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}}, \\beta_2, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$ \\beta_3 (a_{3_{TEMP }}) $$
La covariable ambiental B.60.T.100.MIN.17 en los efectos FIJOS: $$ \\beta_2 (a_{2_{TEMP }}) $$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{2,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}} $$
"))
}
if (input$n_modelo == 32) {
RETORNA <- withMathJax(helpText("
Considera como efectos FIJOS: $$ \\beta_{1_{TIPO_r}}, \\beta_2, \\beta_{3_{ TIPO_r}} $$
La covariable ambiental B.122.T.150.MIN.22 en los efectos FIJOS: $$ \\beta_3 (a_{3_{TEMP }}) $$
La covariable ambiental B.60.T.100.MIN.17 en los efectos FIJOS: $$ \\beta_2 (a_{2_{TEMP }}) $$
Efectos ALEATORIOS a nivel de SITIO: $$ b_{LONGI,3,SITIO_j}, b_{2,SITIO_j} $$
Efectos ALEATORIOS a nivel de FRUTO: $$ b_{2,FRUTO_{m(j)}}, b_{LONGI,1,FRUTO_{m(j)}}, b_{LONGI,3,FRUTO_{m(j)}}, b_{TRANS,3,FRUTO_{m(j)}} $$
"))
}
RETORNA
})
renderUI({
RETORNA2 <-" "
if (input$n_modelo == 24) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
if (input$n_modelo == 25) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
if (input$n_modelo == 26) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
if (input$n_modelo == 27) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
if (input$n_modelo == 30) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
if (input$n_modelo == 32) {
RETORNA2 <- withMathJax(helpText("
El MODELO CANDIDATO contiene la covariable ambiental B.122.T.150.MIN.22 que se obtiene por acumulación diaria de temperaturas que superan los 22 grados centígrados desde los 122 Días Posteriores al primero de Agosto (DDA) hasta los 150 DDA, que se corresponden aproximadamente a 64 y 92 DDPF respectivamente.
"))
}
RETORNA2
})
renderUI({
RETORNA3 <-" "
if (input$n_modelo == 32) {
RETORNA3 <- withMathJax(helpText("
El MODELO CANDIDATO contiene, además, la covariable ambiental B.46.T.100.MIN.16 que se obtiene por acumulación diaria de temperaturas que superan los 17 grados centígrados desde los 60 Días Posteriores al primero de Agosto (DDA) hasta los 100 DDA, que se corresponden aproximadamente a 2 y 42 DDPF respectivamente.
"))
}
RETORNA3
})
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point()+
geom_smooth(colour="red",alpha=0.3)
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.3)+
geom_smooth()
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.3)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.01)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.06)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.09)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.01)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.02)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.1)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.1)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.1)+
geom_smooth(colour="red")
ggplot(fortify(MODELO_F),
aes(x=.fitted,y=sqrt(abs(.resid))))+geom_point(colour="blue",alpha=0.1)+
geom_smooth(colour="red")
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
multi_random
OBTIENE_SIM<-function (MODELO_N,MODELO,NIVEL=1) {
if(MODELO_N=="AB_MOD21")
{
if(NIVEL==1)
{
bb_1<-as.matrix(VarCorr(MODELO)[[5]])
B_ALEA1<-rnorm (1,0,sqrt(bb_1))
C_ALEA1<-0
RETORNA<-c(B_ALEA1,C_ALEA1)
}
if(NIVEL==2)
{
aa_2<-as.numeric(VarCorr(MODELO)[[1]])
bb_2<-as.numeric(VarCorr(MODELO)[[3]])
cc_2<-as.numeric(VarCorr(MODELO)[[2]])
A_ALEA2<-rnorm (1,0,sqrt(aa_2))
B_ALEA2<-rnorm (1,0,sqrt(bb_2))
C_ALEA2<-rnorm (1,0,sqrt(cc_2))
RETORNA<-c(A_ALEA2,B_ALEA2,C_ALEA2)
}
}
if(MODELO_N=="AB_MOD24")
{
if(NIVEL==1)
{
B_ALEA1<-0
cc_1<-as.matrix(VarCorr(MODELO)[[6]])
C_ALEA1<-rnorm (1,0,sqrt(cc_1))
RETORNA<-c(B_ALEA1,C_ALEA1)
}
if(NIVEL==2)
{
aa_2<-as.numeric(VarCorr(MODELO)[[1]])
bb_2<-as.numeric(VarCorr(MODELO)[[3]])
cc_2<-as.numeric(VarCorr(MODELO)[[2]])
A_ALEA2<-rnorm (1,0,sqrt(aa_2))
B_ALEA2<-rnorm (1,0,sqrt(bb_2))
C_ALEA2<-rnorm (1,0,sqrt(cc_2))
RETORNA<-c(A_ALEA2,B_ALEA2,C_ALEA2)
}
}
if(MODELO_N=="AB_MOD27")
{
if(NIVEL==1)
{
B_ALEA1<-0
C_ALEA1<-0
RETORNA<-c(B_ALEA1,C_ALEA1)
}
if(NIVEL==2)
{
aa_2<-as.numeric(VarCorr(MODELO)[[1]])
bb_2<-as.numeric(VarCorr(MODELO)[[3]])
cc_2<-as.numeric(VarCorr(MODELO)[[2]])
A_ALEA2<-rnorm (1,0,sqrt(aa_2))
B_ALEA2<-rnorm (1,0,sqrt(bb_2))
C_ALEA2<-rnorm (1,0,sqrt(cc_2))
RETORNA<-c(A_ALEA2,B_ALEA2,C_ALEA2)
}
}
RETORNA
}
unique(TRANS_V$SITIO2)
unique(LONGI_V$SITIO2)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
OBTIENE_D<-function(LISTA,VALIDA,NRO) {
NIVELES=length(LISTA)
# OBTIENE EL BLOQUE DEL PRIMER NIVEL
BLOQUE_1<-LISTA[[1]]
NOMBRE_1<-as.character(names(LISTA)[1])
ANCHO_1<-dim(LISTA[[1]])[1]
LONGITUD<-ANCHO_1
RETORNA<-BLOQUE_1
if(NIVELES>1) {
# NIVEL 2 DE EFECTOS ALEATORIOS
NOMBRE_2<-as.character(names(LISTA)[2])
ANCHO_2<-dim(LISTA[[2]])[1]
V_N1<-unique(VALIDA[,NOMBRE_1])
TAMIZ1<-VALIDA[VALIDA[,NOMBRE_1]==V_N1[NRO],]
V_N2<-unique(TAMIZ1[,NOMBRE_2])
N2<-length(V_N2)
LONGITUD<-ANCHO_1+ANCHO_2*N2
BLOQUE_2<-REPLICA_M(LISTA[[2]],N2)
RETORNA<-as.matrix(bdiag(BLOQUE_1,BLOQUE_2))
if(NIVELES>2) {
# NIVEL 3 DE EFECTOS ALEATORIOS
NOMBRE_3<-as.character(names(LISTA)[3])
ANCHO_3<-dim(LISTA[[3]])[1]
N3<-0
for(i in 1:N2) {
TAMIZ2<-TAMIZ1[TAMIZ1[,NOMBRE_2]==V_N2[i],]
#  FRUTOS EN EL TAMAÑO
V_N3<-unique(TAMIZ2[,NOMBRE_3])
N3_SUB<-length(V_N3)
N3<-N3+N3_SUB
}
LONGITUD<-ANCHO_1+ANCHO_2*N2+ANCHO_3*N3
BLOQUE_3<-REPLICA_M(LISTA[[3]],N3)
RETORNA<-as.matrix(bdiag(BLOQUE_1,BLOQUE_2,BLOQUE_3))
}
}
RETORNA
}
### REPLICA MATRICES DIAGONIZANDOLES
REPLICA_M<-function(MATRIZ,n) {
ES<-MATRIZ
if(n>1) {
LIMITE<-n-1
for(i in 1:LIMITE) {
ES<-as.matrix(bdiag(MATRIZ,ES))
}
}
ES
}
save.image("~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/PRONO_PAGINA.RData")
save.image("~/CARPETA VALENTIN/TESIS MAESTRIA 2/PRONO_PAGINA/.RData")
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
